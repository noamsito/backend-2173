services:
  db:
    image: postgres:14-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: stock_data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tu_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/tables.sql:/docker-entrypoint-initdb.d/tables.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    mem_limit: 512m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api:
    build: 
      context: .
      dockerfile: api/Dockerfile
    container_name: api_server
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=tu_password
      - DB_NAME=stock_data
      - DB_PORT=5432
      - AUTH0_DOMAIN=${AUTH0_DOMAIN:-dev-ouxdigl1l6bn6n3r.us.auth0.com}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE:-https://stockmarket-api/}
      - WORKERS_API_URL=http://jobmaster:3000
      - FRONTEND_URL=${FRONTEND_URL:-https://antonioescobar.lat}
      - TRANSBANK_RETURN_URL=${TRANSBANK_RETURN_URL:-https://r12c7vfhig.execute-api.us-east-1.amazonaws.com/prod/webpay/return}
      - BOLETAS_LAMBDA_URL=${BOLETAS_LAMBDA_URL}
    depends_on:
      - db
    restart: unless-stopped
    mem_limit: 512m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mqtt-client:
    build: 
      context: ./mqtt-client  # ✅ CAMBIO: contexto correcto
      dockerfile: Dockerfile   # ✅ CAMBIO: Dockerfile relativo al contexto
    container_name: mqtt_client
    environment:
      - API_URL=http://api:3000/stocks
      - HOST=broker.iic2173.org
      - PORT=9000
      - USERNAME=students
      - PASSWORD=iic2173-2025-1-students
      - GROUP_ID=1
    depends_on:
      - api
    restart: unless-stopped
    mem_limit: 256m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: redis_server
    ports:
      - "6379:6379"
    restart: unless-stopped
    mem_limit: 256m
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  jobmaster:
    build: 
      context: ./jobmaster-service
      dockerfile: Dockerfile
    container_name: jobmaster
    ports:
      - "3001:3000"
    environment:
      - REDIS_URL=redis://redis:6379
      - PORT=3000
    depends_on:
      - redis
    restart: unless-stopped
    mem_limit: 256m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  worker:
    build: 
      context: ./jobmaster-service
      dockerfile: Dockerfile
    container_name: worker
    command: ["node", "worker.js"]
    environment:
      - REDIS_URL=redis://redis:6379
      - WORKER_ID=worker-1
      - WORKER_CONCURRENCY=2
    depends_on:
      - redis
      - jobmaster
    restart: unless-stopped
    mem_limit: 256m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local