"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveValueToPromise = exports.mtlsPrefix = exports.generateClientInfo = void 0;
const version_js_1 = require("./version.js");
/**
 * @private
 */
const generateClientInfo = () => ({
    name: 'node-auth0',
    version: version_js_1.version,
    env: {
        node: process.version.replace('v', ''),
    },
});
exports.generateClientInfo = generateClientInfo;
/**
 * @private
 */
exports.mtlsPrefix = 'mtls';
/**
 * Resolves a value that can be a static value, a synchronous function, or an asynchronous function.
 *
 * @template T - The type of the value to be resolved.
 * @param {T | SyncGetter<T> | AsyncGetter<T>} value - The value to be resolved. It can be:
 *   - A static value of type T.
 *   - A synchronous function that returns a value of type T.
 *   - An asynchronous function that returns a Promise of type T.
 * @returns {Promise<T>} A promise that resolves to the value of type T.
 */
const resolveValueToPromise = async (value) => {
    if (typeof value === 'function') {
        const result = value(); // Call the function
        return result instanceof Promise ? result : Promise.resolve(result); // Handle sync/async
    }
    return Promise.resolve(value); // Static value
};
exports.resolveValueToPromise = resolveValueToPromise;
//# sourceMappingURL=utils.js.map